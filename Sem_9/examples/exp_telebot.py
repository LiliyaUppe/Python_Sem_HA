@bot.message_handler(commands=['start'])
def start_message(message):
    user_id = message.from_user.id
    return user_id



@bot.callback_query_handler(func=lambda call: True)
def handle_query(call):
    if call.data.split('#')[0] == call.data.split('#')[1]:
        bot.send_message(call.message.TG_CHAT_ID,  '‚úÖ Correct!')
    else:
        bot.send_message(call.message.TG_CHAT_ID,  '‚ùå Wrong!\n‚ôªÔ∏è The answer is: %s' % call.data.split('#')[1])



@bot.message_handler(commands=['game', 'g'])
def game(message):
    list_of_words = load_my_dictionary(message.from_user.id)
    random.shuffle(list_of_words)
    while not len(list_of_words) < 4:
        current = list_of_words.pop()
        word = current[0]
        definition = current[1]
        all_answers = generate_answers(word, list_of_words)
        keyboard = generate_keyboard(all_answers, word)
        bot.send_message(message.from_user.id, definition, reply_markup = keyboard)
        time.sleep(7)
    bot.send_message(message.from_user.id, 'üì≠ List is empty!')




game = telebot.CallbackGame() 

#add game_short_name value (despite the doc saying theres no  need to add it)
game.game_short_name="menu"

#Create the actual button
buttons = [[telebot.InlineKeyboardButton(text="Show Menu",callback_game=game)]] 

#Send game with custom inline button
keyboard_markup = telebot.InlineKeyboardMarkup(buttons)
context.bot.send_game(chat_id=update.effective_chat.id,game_short_name="menu",reply_markup=keyboard_markup)
  
import random

answers = ("–¥–∞", "–Ω–µ—Ç", "—ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ")
choice = random.choice(answers)
# print("–î—É–º–∞—é, ", choice)
message = "–î—É–º–∞—é, {}".format(choice)
bot.send_message(TG_CHAT_ID, message)

#–ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏—è
def choose(): #def (define) - "–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å" —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ-—Ü–∏–∏
    answers = ("–¥–∞", "–Ω–µ—Ç", "—ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ")
    choice = random.choice(answers)
    message = "–î—É–º–∞—é, {}".format(choice)
    bot.send_message(TG_CHAT_ID, message)
choose() #–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ-—Ü–∏–∏–∏
choose()

def choose(TG_CHAT_ID, question):
    answers = ("–¥–∞", "–Ω–µ—Ç", "—ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ")
    choice = random.choice(answers)
    message = "–î—É–º–∞—é, {}".format(choice)
    bot.send_message(TG_CHAT_ID, message)
    print("–ú–Ω–µ –Ω–∞–ø–∏—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID:", TG_CHAT_ID)
    print("–û–Ω —Å–ø—Ä–∞—à–∏–≤–∞–ª:", question)
    print("–Ø –æ—Ç–≤–µ—Ç–∏–ª:", message)
# choose(TG_CHAT_ID, "–ü—Ä–∏–≤–µ—Ç! –ú–æ–∂–Ω–æ –º–Ω–µ –ø–æ–≤—ã—Å–∏—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—É?")

def reply(TG_CHAT_ID, text):
    print("–ü—Ä–∏–≤–µ—Ç! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {} –Ω–∞–ø–∏—Å–∞–ª –º–Ω–µ: {}".format(TG_CHAT_ID, text))

bot = telebot.TeleBot(cnfg.TOKEN)


bot.CallbackContext(choose)  # <---- –ù–æ–≤–∞—è —Å—Ç—Ä–æ—á–∫–∞!
bot.run_bot()  # <---- –ù–æ–≤–∞—è —Å—Ç—Ä–æ—á–∫–∞!



@bot.message_handler(commands=['button'])
def button_message(message):
    markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1=types.KeyboardButton("–ö–Ω–æ–ø–∫–∞")
    markup.add(item1)
    bot.send_message(message.TG_CHAT_ID,'–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω–∞–¥–æ',reply_markup=markup)
@bot.message_handler(content_types='text')
def message_reply(message):
    if message.text=="–ö–Ω–æ–ø–∫–∞":
        bot.send_message(message.chat.id,"https://habr.com/ru/users/lubaznatel/")


# –ø–µ—Ä–≤—ã–π —Ö–æ–¥
def choose(): #def (define) - "–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å" —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ-—Ü–∏–∏
    players = ['–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', 'Bot']
    choice = random.choice(players)
    message = "–ò–≥—Ä—É –Ω–∞—á–Ω–µ—Ç {}".format(choice)
    bot.send_message(TG_CHAT_ID, message)
choose() #–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ-—Ü–∏–∏–∏

print('server start')
bot.infinity_polling()